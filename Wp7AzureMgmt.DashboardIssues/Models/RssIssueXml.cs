//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5456
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Xml.Serialization;
using System.Runtime.Serialization;

// 
// This source code was auto-generated by xsd, Version=2.0.50727.3038.
// 

namespace Wp7AzureMgmt.DashboardIssues.Models
{

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Xml.Serialization.XmlRootAttribute("rss", Namespace = "", IsNullable = false)]
    public partial class RssIssueXml : ISerializable
    {

        private rssChannel[] channelField;

        private string versionField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("channel", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public rssChannel[] channel
        {
            get
            {
                return this.channelField;
            }
            set
            {
                this.channelField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string version
        {
            get
            {
                return this.versionField;
            }
            set
            {
                this.versionField = value;
            }
        }

        /// <summary>
        /// Need parameterless constructor for deserialization
        /// </summary>
        public RssIssueXml()
        {
        }

        public RssIssueXml(SerializationInfo info, StreamingContext ctxt)
        {
            this.channel = (rssChannel[])info.GetValue("channel", typeof(rssChannel[]));
            this.version = (string)info.GetValue("version", typeof(string));
        }


        public void GetObjectData(SerializationInfo info, StreamingContext ctxt)
        {
            info.AddValue("channel", this.channel);
            info.AddValue("version", this.version);

        }

        public override int GetHashCode()
        {
            return this.version.GetHashCode() + this.channel.GetHashCode();
        }

        public override bool Equals(object obj)
        {
            if (obj.GetType() != typeof(RssIssueXml))
            {
                return false;
            }

            // compare properties
            if (((RssIssueXml)obj).version != this.version)
            {
                return false;
            }
            
            // both collections are null
            if ((((RssIssueXml)obj).channel == null) && (this.channel==null))
            {
                return true;
            }

            // one collection is null, the other isn't
            if (((((RssIssueXml)obj).channel == null) && this.channel != null)
                || ((((RssIssueXml)obj).channel != null) && this.channel == null))
            {
                return false;
            }

            // count of collections is different
            if (((RssIssueXml)obj).channel.Length != this.channel.Length)
            {
                return false;
            }

            // both collections have items, now compare each item -- assume they are in same order
            rssChannel[] thisList = this.channel;
            rssChannel[] testList = ((RssIssueXml)obj).channel;

            for (int i = 0; i < this.channel.Length; i++)
            {
                if (!thisList[i].Equals(testList[i]))
                {
                    return false;
                }
            }

            return true;
        }

    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class rssChannel : ISerializable
    {

        private string titleField;

        private string linkField;

        private string descriptionField;

        private string languageField;

        private string pubDateField;

        private string lastBuildDateField;

        private string copyrightField;

        private rssChannelImage[] imageField;

        private rssChannelItem[] itemField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string title
        {
            get
            {
                return this.titleField;
            }
            set
            {
                this.titleField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string link
        {
            get
            {
                return this.linkField;
            }
            set
            {
                this.linkField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                this.descriptionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string language
        {
            get
            {
                return this.languageField;
            }
            set
            {
                this.languageField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string pubDate
        {
            get
            {
                return this.pubDateField;
            }
            set
            {
                this.pubDateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string lastBuildDate
        {
            get
            {
                return this.lastBuildDateField;
            }
            set
            {
                this.lastBuildDateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string copyright
        {
            get
            {
                return this.copyrightField;
            }
            set
            {
                this.copyrightField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("image", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public rssChannelImage[] image
        {
            get
            {
                return this.imageField;
            }
            set
            {
                this.imageField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("item", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public rssChannelItem[] item
        {
            get
            {
                return this.itemField;
            }
            set
            {
                this.itemField = value;
            }
        }

        /// <summary>
        /// Used by deserialization
        /// </summary>
        public rssChannel()
        {
            this.copyright = string.Empty;
            this.description = string.Empty;
            this.language = string.Empty;
            this.lastBuildDate = string.Empty;
            this.link = string.Empty;
            this.pubDate = string.Empty;
            this.title = string.Empty;
        }

        public rssChannel(SerializationInfo info, StreamingContext ctxt)
        {
            this.image = (rssChannelImage[])info.GetValue("image", typeof(rssChannelImage[]));
            this.copyright = (string)info.GetValue("copyright", typeof(string));
            this.description = (string)info.GetValue("description", typeof(string));
            this.item = (rssChannelItem[])info.GetValue("item", typeof(rssChannelItem[]));
            this.language = (string)info.GetValue("language", typeof(string));
            this.lastBuildDate = (string)info.GetValue("lastBuildDate", typeof(string));
            this.link = (string)info.GetValue("link", typeof(string));
            this.pubDate = (string)info.GetValue("pubDate", typeof(string));
            this.title = (string)info.GetValue("title", typeof(string));

        }


        public void GetObjectData(SerializationInfo info, StreamingContext ctxt)
        {
            info.AddValue("copyright", this.copyright);
            info.AddValue("description", this.description);
            info.AddValue("image", this.image);
            info.AddValue("item", this.item);
            info.AddValue("language", this.language);
            info.AddValue("lastBuildDate", this.lastBuildDate);
            info.AddValue("link", this.link);
            info.AddValue("pubDate", this.pubDate);
            info.AddValue("title", this.title);
        }

        public override int GetHashCode()
        {
            return this.copyright.GetHashCode() +
                this.description.GetHashCode() +
                this.image.GetHashCode() + 
                this.item.GetHashCode() + 
                this.language.GetHashCode() + 
                this.lastBuildDate.GetHashCode() + 
                this.link.GetHashCode() + 
                this.pubDate.GetHashCode() + 
                this.title.GetHashCode();
        }

        public override bool Equals(object obj)
        {


            if (obj.GetType() != typeof(rssChannel))
            {
                return false;
            }

            // compare properties
            if ((((rssChannel)obj).copyright != this.copyright)
                || (((rssChannel)obj).description != this.description)
                || (((rssChannel)obj).language != this.language)
                || (((rssChannel)obj).link != this.link)
                || (((rssChannel)obj).pubDate != this.pubDate)
                || (((rssChannel)obj).title != this.title))
            {
                return false;
            }

            // both collections are null
            if (((((rssChannel)obj).item == null) && this.item == null)
                && ((((rssChannel)obj).image == null) && this.image == null))
            {
                return true;
            }

            // one collection is null, the other isn't
            if (((((rssChannel)obj).item == null) && this.item != null)
                || ((((rssChannel)obj).item != null) && this.item == null))
            {
                return false;
            }

            // one collection is null, the other isn't
            if (((((rssChannel)obj).image == null) && this.image != null)
                || ((((rssChannel)obj).image != null) && this.image == null))
            {
                return false;
            }

            // count of collections is different
            if (((rssChannel)obj).item.Length != this.item.Length)
            {
                return false;
            }

            // count of collections is different
            if (((rssChannel)obj).image.Length != this.image.Length)
            {
                return false;
            }

                    
            // items 
            rssChannelItem[] thisList = this.item;
            rssChannelItem[] testList = ((rssChannel)obj).item;

            for (int i = 0; i < this.item.Length; i++)
            {
                if (!thisList[i].Equals(testList[i]))
                {
                    return false;
                }
            }

            // images 
            rssChannelImage[] thisList2 = this.image;
            rssChannelImage[] testList2 = ((rssChannel)obj).image;
            for (int i = 0; i < this.image.Length; i++)
            {
                if (!thisList2[i].Equals(testList2[i]))
                {
                    return false;
                }
            }

            return true;
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class rssChannelImage : ISerializable
    {

        private string urlField;

        private string titleField;

        private string linkField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string url
        {
            get
            {
                return this.urlField;
            }
            set
            {
                this.urlField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string title
        {
            get
            {
                return this.titleField;
            }
            set
            {
                this.titleField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string link
        {
            get
            {
                return this.linkField;
            }
            set
            {
                this.linkField = value;
            }
        }

        /// <summary>
        /// Used by deserialization
        /// </summary>
        public rssChannelImage()
        {
        }

        public rssChannelImage(SerializationInfo info, StreamingContext ctxt)
        {
            this.link = (string)info.GetValue("link", typeof(string));
            this.title = (string)info.GetValue("title", typeof(string));
            this.url = (string)info.GetValue("url", typeof(string));
        }


        public void GetObjectData(SerializationInfo info, StreamingContext ctxt)
        {
            info.AddValue("link", this.link);
            info.AddValue("title", this.title);
            info.AddValue("url", this.url);
        }

        public override int GetHashCode()
        {
            return this.link.GetHashCode() +
                this.title.GetHashCode() +
                this.url.GetHashCode();
        }

        public override bool Equals(object obj)
        {
            if (obj.GetType() != typeof(rssChannelImage))
            {
                return false;
            }

            if ((((rssChannelImage)obj).link == this.link)
                && (((rssChannelImage)obj).title == this.title)
                && (((rssChannelImage)obj).url == this.url))
            {
                return true;
            }

            return false;
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class rssChannelItem : ISerializable
    {

        private string titleField;

        private string pubDateField;

        private string descriptionField;

        private string statusField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string title
        {
            get
            {
                return this.titleField;
            }
            set
            {
                this.titleField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string pubDate
        {
            get
            {
                return this.pubDateField;
            }
            set
            {
                this.pubDateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                this.descriptionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace = "http://www.windowsazurestatus.com/windowsazure/support/status/mswasd.htm")]
        public string status
        {
            get
            {
                return this.statusField;
            }
            set
            {
                this.statusField = value;
            }
        }

        /// <summary>
        /// Used by deserialization
        /// </summary>
        public rssChannelItem()
        {
        }

        public rssChannelItem(SerializationInfo info, StreamingContext ctxt)
        {
            this.description = (string)info.GetValue("description", typeof(string));
            this.pubDate = (string)info.GetValue("pubDate", typeof(string));
            this.status = (string)info.GetValue("status", typeof(string));
            this.title = (string)info.GetValue("title", typeof(string));
        }


        public void GetObjectData(SerializationInfo info, StreamingContext ctxt)
        {
            info.AddValue("description", this.description);
            info.AddValue("pubDate", this.pubDate);
            info.AddValue("status", this.status);
            info.AddValue("title", this.title);
        }

        public override int GetHashCode()
        {
            return this.description.GetHashCode() + 
                this.pubDate.GetHashCode() + 
                this.status.GetHashCode() +
                this.title.GetHashCode();
        }

        public override bool Equals(object obj)
        {
            if (obj.GetType() != typeof(rssChannelItem))
            {
                return false;
            }

            if ((((rssChannelItem)obj).description == this.description)
                && (((rssChannelItem)obj).pubDate == this.pubDate)
                && (((rssChannelItem)obj).status == this.status)
                && (((rssChannelItem)obj).title == this.title))
            {
                return true;
            }

            return false;
        }
    }

    /// <remarks/>
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    //[System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    //[System.Xml.Serialization.XmlRootAttribute(Namespace = "", IsNullable = false)]
    //public partial class NewDataSet : ISerializable
    //{

    //    private RssIssueXml[] itemsField;

    //    /// <remarks/>
    //    [System.Xml.Serialization.XmlElementAttribute("rss")]
    //    public RssIssueXml[] Items
    //    {
    //        get
    //        {
    //            return this.itemsField;
    //        }
    //        set
    //        {
    //            this.itemsField = value;
    //        }
    //    }

    //    /// <summary>
    //    /// Used by deserialization
    //    /// </summary>
    //    public NewDataSet()
    //    {
    //    }

    //    public NewDataSet(SerializationInfo info, StreamingContext ctxt)
    //    {
    //        this.Items = (RssIssueXml[])info.GetValue("Items", typeof(RssIssueXml[]));
    //    }


    //    public void GetObjectData(SerializationInfo info, StreamingContext ctxt)
    //    {
    //        info.AddValue("Items", this.Items);
    //    }

    //    public override int GetHashCode()
    //    {
    //        return itemsField.GetHashCode();
    //    }

    //    public override bool Equals(object obj)
    //    {
    //        if (obj.GetType() != typeof(NewDataSet))
    //        {
    //            return false;
    //        }

    //        if ((((NewDataSet)obj).itemsField.Length == this.itemsField.Length))
    //        {
    //            RssIssueXml[] thisList = this.Items;
    //            RssIssueXml[] testList = ((NewDataSet)obj).Items;

    //            for (int i = 0; i < this.itemsField.Length; i++)
    //            {
    //                if (!thisList[i].Equals(testList[i]))
    //                {
    //                    return false;
    //                }
    //            }
    //        }
    //        else
    //        {
    //            // date or count is not right
    //            return false;
    //        }

    //        return true;
    //    }
    //}
}